%macro iif 3
	; %1: condicion		; %2: then		; %3: else
    PUSH RBP
    MOV RBP, RSP
    PUSH RAX
    SUB RSP, 8
    
    %if 1=1
		MOV RDI, 1
	%else
		MOV RDI, 0
	%endif
	
	ADD RSP, 8
	POP RAX
	POP RBP
	RET
%endmacro


%macro for 3
	; %1: init_exp1
	; %2: condicion
	; %3: crecimiento init_exp1
	
	;for (int i_ = 0; i < filas; i++) {
		MOV i, 0	; i
		.for1:
		;CONDICION
		CMP filas, i
		JG .endfor1 
				
		;CODIGO
		;for (int j = 0; j < cols; j++) {
			MOV j_d, 0
			MOV j_s, 0
			.for2:
			;CONDICION
			CMP cols, j_d
			JG .endfor2 
			
			;CODIGO
			
			
			;AUMENTAR Y SEGUIR
			INC 			
			JMP .for2
			
			.endfor2:
			;AUMENTAR Y SEGUIR
			INC i
			JMP .for1
		
		.endfor1:
		
%endmacro
